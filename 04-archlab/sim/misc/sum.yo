0x000:                      | .pos 0
0x000: 30f40002000000000000 | irmovq stack, %rsp
0x00a: 804800000000000000   | call main
0x013: 00                   | halt
                            | 
0x018:                      | .align 8
0x018:                      | ele1:
0x018: 0a00000000000000     |         .quad 0x00a
0x020: 2800000000000000     |         .quad ele2
0x028:                      | ele2:
0x028: b000000000000000     |         .quad 0x0b0
0x030: 3800000000000000     |         .quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     |         .quad 0xc00
0x040: 0000000000000000     |         .quad 0
                            | 
0x048:                      | main:
0x048: 30f71800000000000000 |     irmovq ele1, %rdi
0x052: 805c00000000000000   |     call sum_list
0x05b: 90                   |     ret
                            | 
                            | # long sum_list(list_ptr ls)
0x05c:                      | sum_list:
0x05c: 6300                 |     xorq %rax, %rax
0x05e: 6388                 |     xorq %r8, %r8
0x060: 30f90800000000000000 |     irmovq $8, %r9
0x06a:                      | test:
0x06a: 6187                 |     subq %r8, %rdi
0x06c: 747600000000000000   |     jne loop
0x075: 90                   |     ret
0x076:                      | loop:
0x076: 50370000000000000000 |     mrmovq (%rdi), %rbx
0x080: 6030                 |     addq %rbx, %rax
0x082: 6097                 |     addq %r9, %rdi
0x084: 50370000000000000000 |     mrmovq (%rdi), %rbx
0x08e: 2037                 |     rrmovq %rbx, %rdi
0x090: 706a00000000000000   |     jmp test
                            | 
                            | #stack starts here
0x200:                      | .pos 0x200
0x200:                      | stack:
